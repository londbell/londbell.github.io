[{"title":"","date":"2017-03-26T15:47:55.221Z","path":"2017/03/26/README/","text":"FlappyFrogThe violent modification of Donâ€™t Touch My Birdie by Mark Steve Samsonlicensed under Creative Commons Attribution-NonCommercial 4.0 International License. play: https://tusenpo.github.io/FlappyFrog/ the weird frog image is modified from another frog image","tags":[]},{"title":"Two Sum","date":"2014-07-01T13:52:00.000Z","path":"2014/07/01/Two Sum/","text":"Given an array of integers, return indices of the two numbers such that they add up to a specific target. You may assume that each input would have exactly one solution, and you may not use the same element twice. Example: Given nums = [2, 7, 11, 15], target = 9, Because nums[0] + nums[1] = 2 + 7 = 9,return [0, 1]. 12345678910111213141516171819202122232425262728293031323334353637package com.company;public class Main &#123; public static void main(String[] args) &#123; // write your code here int nums3[] = &#123;3, 2, 4&#125;; int target3 = 6; int nums4[] = &#123;2,7,11,15&#125;; int target4 = 9; int twoSum[] = Solution.twoSum(nums3, target3); System.out.print(twoSum[0] + \" \" + twoSum[1]); System.out.println(\" finish\"); &#125;&#125;class Solution &#123; public static int[] twoSum(int[] nums, int target) &#123; int flag = 0; int array[] = &#123;0,0&#125;; for(int i = 0; i &lt; nums.length; i++) &#123; if(flag == 1) &#123; break; &#125; for(int j = i + 1; j &lt; nums.length; j++) &#123; if((nums[i] + nums[j] == target)) &#123; array[0] = i; array[1] = j; flag = 1; break; &#125; &#125; &#125; return array; &#125;&#125;","tags":[{"name":"java","slug":"java","permalink":"http://londbell,github.io/tags/java/"},{"name":"leetcode","slug":"leetcode","permalink":"http://londbell,github.io/tags/leetcode/"}]}]